// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "departure_station", Type: field.TypeString},
		{Name: "arrival_station", Type: field.TypeString},
		{Name: "id_number", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "amount", Type: field.TypeInt8, Default: 1},
		{Name: "error_message", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "order_user", Type: field.TypeInt},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_user",
				Columns:    []*schema.Column{OrdersColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// OrderValidationsColumns holds the columns for the "order_validations" table.
	OrderValidationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "jession_id", Type: field.TypeString},
		{Name: "captcha_image", Type: field.TypeString},
		{Name: "cookies", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "order_validation_order", Type: field.TypeInt},
	}
	// OrderValidationsTable holds the schema information for the "order_validations" table.
	OrderValidationsTable = &schema.Table{
		Name:       "order_validations",
		Columns:    OrderValidationsColumns,
		PrimaryKey: []*schema.Column{OrderValidationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_validations_orders_order",
				Columns:    []*schema.Column{OrderValidationsColumns[5]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PasswordTokensColumns holds the columns for the "password_tokens" table.
	PasswordTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "password_token_user", Type: field.TypeInt},
	}
	// PasswordTokensTable holds the schema information for the "password_tokens" table.
	PasswordTokensTable = &schema.Table{
		Name:       "password_tokens",
		Columns:    PasswordTokensColumns,
		PrimaryKey: []*schema.Column{PasswordTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "password_tokens_users_user",
				Columns:    []*schema.Column{PasswordTokensColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "verified", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrdersTable,
		OrderValidationsTable,
		PasswordTokensTable,
		UsersTable,
	}
)

func init() {
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	OrderValidationsTable.ForeignKeys[0].RefTable = OrdersTable
	PasswordTokensTable.ForeignKeys[0].RefTable = UsersTable
}
